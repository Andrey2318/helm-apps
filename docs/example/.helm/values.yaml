global:
  ## Альтернатива ограниченным yaml-алиасам Helm'а. Даёт возможность не дублировать одну и ту же конфигурацию много раз.
  #
  # Здесь, в "global._includes", объявляются блоки конфигурации, которые потом можно использовать в любых values-файлах.
  # Пример подтягивания этих блоков конфигурации в репозитории приложения:
  # -----------------------------------------------------------------------------------------------
  # .helm/values.yaml:
  # -----------------------------------------------------------------------------------------------
  # apps-cronjobs:
  #   cronjob-1:
  #     _include: ["apps-cronjobs-defaultCronJob"]
  #     backoffLimit: 1
  # -----------------------------------------------------------------------------------------------
  #
  # В примере выше конфигурация из include-блока "apps-cronjobs-defaultCronJob" развернётся на уровне
  # apps-cronjobs.cronjob-1, а потом поверх развернувшейся конфигурации применится параметр "backoffLimit: 1",
  # при необходимости перезаписав параметр "backoffLimit" из include-блока.
  #
  # Подробнее: https://github.com/flant/helm-charts/tree/master/.helm/charts/flant-lib#flexpandincludesinvalues-function
  _includes:
    apps-defaults:
      enabled: false
    apps-default-library-app:
      _include: ["apps-defaults"]
      # CLIENT: ask if this is ok for a defaul
      imagePullSecrets: |
        - name: registrysecret
    ## Конфигурация по умолчанию для CronJob в целом.
    apps-cronjobs-defaultCronJob:
      _include: ["apps-default-library-app"]
      concurrencyPolicy: "Forbid"
      successfulJobsHistoryLimit: 1
      failedJobsHistoryLimit: 1
      backoffLimit: 0
      priorityClassName:
        prod: "production-high"
      restartPolicy: "Never"
      startingDeadlineSeconds: 60
      verticalPodAutoscaler:
        enabled: true
        updateMode: "Off"
        resourcePolicy: |
          {}

    apps-secrets-defaultSecret:
      _include: ["apps-defaults"]

    apps-ingresses-defaultIngress:
      _include: ["apps-defaults"]
      class: "nginx"

    apps-jobs-defaultJob:
      _include: ["apps-default-library-app"]
      backoffLimit: 0
      priorityClassName:
        prod: "production-high"
      restartPolicy: "Never"
      verticalPodAutoscaler:
        enabled: true
        updateMode: "Off"
        resourcePolicy: |
          {}

    apps-stateful-defaultApp:
      _include: ["apps-default-library-app"]
      revisionHistoryLimit: 3
      terminationGracePeriodSeconds:
        _default: 30
        prod: 60
      affinity: |
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels: {{ include "fl.generateSelectorLabels" (list $ . .name) | nindent 22 }}
              topologyKey: kubernetes.io/hostname
            weight: 10
      priorityClassName:
        prod: "production-medium"
      podDisruptionBudget:
        enabled: true
        maxUnavailable: "15%"
      verticalPodAutoscaler:
        enabled: true
        updateMode: "Off"
      service:
        enabled: false
        name: "{{ $.CurrentApp.name }}"
        headless: true

    apps-stateless-defaultApp:
      _include: ["apps-default-library-app"]
      revisionHistoryLimit: 3
      strategy:
        _default: |
          rollingUpdate:
            maxSurge: 20%
            maxUnavailable: 50%
          type: RollingUpdate
        prod: |
          rollingUpdate:
            maxSurge: 20%
            maxUnavailable: 25%
          type: RollingUpdate
      priorityClassName:
        prod: "production-medium"
      podDisruptionBudget:
        enabled: true
        maxUnavailable: "15%"
      verticalPodAutoscaler:
        enabled: true
        updateMode: "Off"
        resourcePolicy: |
          {}
      horizontalPodAutoscaler:
        enabled: false
      service:
        enabled: false
        name: "{{ $.CurrentApp.name }}"
        headless: true

    apps-configmaps-defaultConfigmap:
      _include: ["apps-defaults"]
